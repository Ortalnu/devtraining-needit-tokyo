<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_rel_widget_clone">
    <sp_rel_widget_clone action="DELETE">
        <child display_value="Copy of Standard Ticket Header">c0361feb972021106882b0efe153af22</child>
        <cloned>2023-01-28 21:11:18</cloned>
        <last_validated>2023-01-28 21:11:18</last_validated>
        <parent display_value="Standard Ticket Header">8face42a131d0810da297ad66144b0e2</parent>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sp_widget&gt;&lt;category&gt;sc&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function ($scope, spUtil, $window, $sce, $timeout, spAriaUtil) {
	function isRefreshNeededForChanges(changes) {
		var isNeeded = changes.length &gt; 0 &amp;&amp; !(
			changes.length == 1 &amp;&amp; (
				changes[0] == 'comments' || changes[0] == 'work_notes' || changes[0] == 'task_percent_complete'
			)
		);
		return isNeeded;
	}
	var c = this;
	if (c.data.is_new_order) {
		$timeout(function() {
			spAriaUtil.sendLiveMessage(c.data.requestSubmitMsg);
		}, 500);
		
	}
	c.showMore = c.showControls = false;
	fieldsCount = 0; // actual fields that will be rendered
	angular.forEach(c.data.fields, function(field) {
		if (field.type !== 'workflow' &amp;&amp; (field.type !== 'decimal' || field.value != 0))
				fieldsCount++;
	});
	if (fieldsCount &gt; 3)
		c.showMore = c.showControls = true;
	c.data.currentActionWidget = $scope.data.actionWidget;
	spUtil.recordWatch($scope, $scope.data.table, "sys_id=" + $scope.data.sys_id, function(name) {
		if (isRefreshNeededForChanges(name.data.changes)) {
			c.data.currentActionWidget = null;
			$scope.server.get().then(function(response) {
				if (!_.isEqual(c.data, response.data))
					_.assign(c.data, response.data);
				c.data.currentActionWidget = response.data.actionWidget;
				if (c.data.isFocusRequired)
					c.data.currentActionWidget.isFocusRequired = c.data.isFocusRequired;
			});
		} else {
			c.server.get().then(function(response) {
						c.data.headerFields = response.data.headerFields;
					});
		}
	});
	$scope.$on('focusOnActions', function(evt, data) {
		 c.data.isFocusRequired = data.isFocusRequired;
		});
	
	$scope.hideMessage = function($scope) {
		c.hide = true;
	}
	$scope.openProfile = function(profileId) {
		if(!$scope.data.isExternalUser) {
		$window.open('?id=user_profile&amp;sys_id=' + profileId, '_blank');
		}
	};
	if ($scope.data.description)
		$scope.description = $scope.data.description.type == 'html' ? $sce.trustAsHtml($scope.data.description.display_value) : $scope.data.description.display_value;
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;$sp-space--sm: 8px !default;
$sp-space--xxs: 2px !default;
.options-btn {
    border:none;
    background-image:none;
    background-color:transparent;
    -webkit-box-shadow: none;
    -moz-box-shadow: none;
    box-shadow: none;
  	color: $brand-primary;
  	padding: 0px !important;
	padding-top: 10px !important;
}

.options-btn:focus {
  outline-offset: 0px;
}

.pre-wrap {
  white-space: pre-wrap;
}

.flex-display {
  display: flex;
  align-items: center;
}

.title-padding {
  padding-top: 5px;
  padding-bottom: 5px;
}

.ticket-fields {
  margin-left: -7px;
  margin-right: -($sp-space--sm);
  -webkit-margin-before: 0;
  -webkit-margin-after: 0;
 
}

.adjust-height {
  min-height: 45px;
  margin-bottom: 1%;
}

.grid{
  grid:auto / auto auto;
  display:grid;
}

.centre{
  margin-bottom: auto;
  margin-top: auto;
}

#wrapper {

  display: flex;
  align-items: center;
  margin: auto;
}

.size{
  margin: 0px !important;
}

hr{
	margin: 0px !important;
}

.padder-md-r {
  padding-right: 20px !important;
}

.padding-sm {
  padding-left: 10px;
}

.avatar-container {
  margin-top: $sp-space--xxs;
  margin-right: $sp-space--xxs;
}

.header-text {
  padding-left: 10px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: block;
  margin-bottom: 0px;
}

.label-color {
  color: $gray;
}

.alert-text {
  font-weight: normal !important;
  text-decoration: underline;
}

.notification-icon {
  margin-right: $sp-space--xxs;
}

.header-text &amp;gt; .tooltip {
  left: 10px !important;
}
.align-tooltip &amp;gt; .tooltip {
  left: 50px !important;
}
@media only screen and (max-width : 767px) {
  .show-less &amp;gt; div:nth-child(n+4) {
    display : none !important;
  }
  
  .text-whitespace div &amp;gt; span {	
    white-space: normal !important;
  }
  
 .text-whitespace div &amp;gt; p {	
    white-space: normal !important;
  }
  .show-more-controls {
   padding: 0 !important;
   margin-left: 1.5rem !important;
  }
  	
 .show-more-controls &amp;gt; span {	
   padding-left: 1rem !important;
 }
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description&gt;Provides the header section for any standard ticket&lt;/description&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;standard_ticket_header&lt;/id&gt;&lt;internal&gt;true&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;Standard Ticket Header&lt;/name&gt;&lt;option_schema&gt;[{"name":"pickup_msg","section":"Presentation","label":"Pickup message","type":"string"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_external,snc_internal&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function(){
	var tableName = $sp.getParameter('table');
	
	var sysId = $sp.getParameter('sys_id');
	var record = sn_std_tkt_api.TicketConfig.getTicketRecord(tableName, sysId);
	data.isExternalUser = !gs.hasRole('snc_internal');
	data.is_new_order = (($sp.getParameter("is_new_order") + '') === "true");
	
	data.canRead = hasReadAcces(record);
	if (!data.canRead)
		return;
	
	if ($sp.getParameter('headless') == 'true')
		data.headless = true;
	else if ($sp.getParameter('headless') == 'false')
		data.headless = false;
	else if ($sp.getParameter('headless') == null)
		data.headless = false;
	else
		return;

	if (data.headless)
		data.hideHeader = true;

	tableName = record.getTableName();
	sysId = record.getUniqueValue();
	
	var sdField;
	var headerFields = [];
	var showDomainState = false;
	
	//URL has domain table
	if (tableName != 'universal_request') {
		//Check if universal_request field is present and it is a universal request
		if (record.isValidField('universal_request') &amp;&amp; !record.universal_request.nil()) {
			data.urLink = '?id=standard_ticket&amp;table=universal_request&amp;sys_id=' + record.universal_request.sys_id;
			var ur = sn_std_tkt_api.TicketConfig.getTicketRecord('universal_request', record.universal_request);
			if (!hasReadAcces(ur)) {
				readHeaderFields(record);
				showDomainState = true;
			}
			else {
				data.number = $sp.getField(ur, 'number');
				headerFields.push($sp.getField(ur, 'sys_created_on'));
				headerFields.push($sp.getField(record, 'sys_updated_on'));
				headerFields.push($sp.getField(ur, 'state'));
				sdField = $sp.getField(ur, 'short_description');
			}
			//URL-non primary ticket
			if (record.universal_request.primary_task != record.sys_id)
						data.primary_ticket_link = '?id=standard_ticket&amp;table=universal_request&amp;sys_id=' + record.universal_request;
		}
		//It is a domain ticket
		else {
			readHeaderFields(record);
			showDomainState = true;
		}
 }
  //URL-Table name is universal request
	else {
		//Domain ticket is created
		if (!record.primary_task.nil()) {
			data.urLink = '?id=standard_ticket&amp;table=universal_request&amp;sys_id=' + record.sys_id;
			var primary_table = record.primary_task.getRefRecord().getTableName();
			var primaryGR = sn_std_tkt_api.TicketConfig.getTicketRecord(primary_table, record.primary_task + '');
			data.canReadPrimary = hasReadAcces(primaryGR);
			if (!data.canReadPrimary) {
				readHeaderFields(record);
				record = sn_std_tkt_api.TicketConfig.getTicketRecord(primary_table, record.primary_task);
			}
			else { //can read primary ticket
				sdField = $sp.getField(record, 'short_description');
				data.number = $sp.getField(record, 'number');
				headerFields.push($sp.getField(record, 'sys_created_on'));
				headerFields.push($sp.getField(primaryGR, 'sys_updated_on'));
				headerFields.push($sp.getField(record, 'state'));

				record = sn_std_tkt_api.TicketConfig.getTicketRecord(primary_table, record.primary_task);
				tableName = record.getTableName();
				sysId = record.getUniqueValue();
			}
		}
		//No domain ticket assigned
		else
			readHeaderFields(record);
	}
	
	if (sdField == null || !sdField.value) {//Use number if SD is not there
		data.isEmpty = true;
		sdField = data.number;
	}

	data.title = sdField ? sdField.display_value : record.getLabel();
	data.headerFields = headerFields;
	data.requestSubmitMsg = gs.getMessage("Thank You. Your request {0} has been submitted." , data.number ? data.number.display_value : "");
	
	data.canReadConfig = hasReadAcces(record);
	if (!data.canReadConfig)
		return;

	var config = sn_std_tkt_api.TicketConfig.getConfig(tableName, record.sys_domain);

	if (config) {
		if (showDomainState &amp;&amp; config.state_field != 'state') {
			var configState = $sp.getField(record, config.state_field);
			headerFields.forEach(function(field, index, that) {
				if (field.name == 'state') {
					that[index] = configState;
				}
			})
		}
		data.show_info_widget = config.show_info_widget;
		if (!data.show_info_widget)
			showConfigTicketFields (config, record);
		else
			showTicketWidget(config, tableName, sysId);

		data.table = tableName;
		data.sys_id = sysId;

		showActionWidget(config, tableName, sysId);
		var descriptionField = config.description_field || 'description';
		if (record.isValidField(descriptionField)) {
			var field = record.getElement(descriptionField);
			if (field &amp;&amp; field.canRead())
				showDescription(config, record, descriptionField);
		}
	}
	
	function hasReadAcces(record) {
		return (record != null &amp;&amp; record.isValid() &amp;&amp; record.canRead());
	}
	
	function readHeaderFields(record) {
		sdField = $sp.getField(record, 'short_description');
		data.number = $sp.getField(record, 'number');
		headerFields = $sp.getFields(record, 'sys_created_on, sys_updated_on, state');
	}
	
	function showConfigTicketFields(config, record) {
		var fieldNames = [];
			if (config.info_fields)
				fieldNames = config.info_fields.split(',');
		var fields = [];
		if (record.getTableName() == 'sc_req_item' &amp;&amp; !record.cat_item.nil()) {
			var catalogItemJS = new sn_sc.CatItem(record.cat_item);
			var cartItemDetail = catalogItemJS.getItemSummary(true);
		}
			fieldNames.forEach(function (fName) {
				if ((!fName || fName == ''))
					return;
				
				var fElement = record.getElement(fName);
				if (!fElement)
					return;

				if (!fElement.canRead())
					return;
				
				if(fName == 'recurring_price' &amp;&amp; record.recurring_frequency.nil())
					return;
				
				if (fName == 'price' || fName == 'recurring_price') {
					var showPrice = canShowPrice(catalogItemJS, record.getValue(fName));
					if (!showPrice)
						return;
				}
				var hideQuantity = (fName == 'quantity') &amp;&amp; !cartItemDetail.show_quantity;
				if (hideQuantity)
					return;
				
				var type = fElement.getED().getInternalType();
				if (type == 'glide_list')
					loadGlideListFieldInfo(fElement, fName, type, record, fields);
				else if (type == 'workflow')
					loadWorkflowFieldInfo(fElement, fName, type, record, fields);
				else {
					var f = {
						display_value: (fName == 'recurring_price' &amp;&amp; !record.recurring_frequency.nil()) ? (fElement.getDisplayValue() + " " + record.getDisplayValue('recurring_frequency')) : fElement.getDisplayValue(),
						label: fElement.getLabel(),
						name: fElement.getName(),
						type: type,
						value: (fName == 'sys_updated_on' &amp;&amp; record.getValue("sys_mod_count") &lt;= 0) ? '' : fElement.toString()
					};
					
					if (!f.value)
						return;

					if (type == 'reference') {
						var reference = fElement.getReferenceTable();
						f.reference = reference;

						if (reference == 'sys_user') {
							f.user = {
								userID: f.value,
								name: f.display_value,
								avatar: GlideAvatarFinder.getAvatarPath(f.value),
								initials: buildInitials(f.display_value)
							}
						}
					}
					fields.push(f);
				}
			});

			data.fields = fields;
	}
	
	function loadGlideListFieldInfo(fElement, fName, type, record, fields) {
		var val = fElement.toString();
		var f = {
			display_value: fElement.getDisplayValue() ? fElement.getDisplayValue().split(",") : '',
			label: fElement.getLabel(),
			type: type,
			value: val ? val.split(",") : '',
			reference: fElement.getED().getReference()
		};
		if (!f.value)
			return;

		var gReference = fElement.getED().getReference();
		if (gReference == 'sys_user') {
			f.user = [];
			for(var u = 0; u &lt; f.value.length; u++){
				f.user.push(person = {
					userID: f.value[u],
					name: f.display_value[u],
					avatar: GlideAvatarFinder.getAvatarPath(f.value[u]),
					initials: buildInitials(f.display_value[u])
				})
			}
		}
		fields.push(f);
	}
	
	function loadWorkflowFieldInfo(fElement, fName, type, record, fields) {
		var f = {
			display_value: fElement.getDisplayValue(),
			label: fElement.getLabel(),
			type: type,
			value: fElement.toString()
		};
		f.stageWidget = $sp.getWidget('request_item_workflow_stages', {req_item_id: sysId});
		fields.push(f);
	}
	
	function showTicketWidget(config, tableName, sysId) {
		var widgetParam = config.info_widget_param
			if (widgetParam)
				widgetParam = JSON.parse(widgetParam)
			else
				widgetParam = {};
		
			widgetParam.table = tableName;
			widgetParam.sys_id = sysId;
			
			data.info_widget = $sp.getWidget(config.info_widget, widgetParam);
	}
	
	function showActionWidget(config, tableName, sysId) {
		var widgetParam = config.action_widget_param
		if (widgetParam)
			widgetParam = JSON.parse(widgetParam)
		else
			widgetParam = {};

		widgetParam.table = tableName;
		widgetParam.sys_id = sysId;

		data.actionWidget = $sp.getWidget(config.action_widget, widgetParam);
	}

	function setDescription(record, descriptionField) {
		var description = $sp.getField(record, descriptionField);
		if (description) {
			data.description = {
				'type' : description.type,
				'display_value' : description.display_value
			};
		}
	}

	function showDescription(config, record, descriptionField) {
		if (config.show_description == 'always')
			setDescription(record, descriptionField);

		else if (config.show_description == 'no_variable') {
			var variables = record.variables.getElements(true);
			if (variables.length == 0)
				setDescription(record, descriptionField);

		}
	}
	
	function buildInitials(name) {
		if (!name)
			return "--";

		var initialMatchRegex = /^[A-ZÀ-Ÿ]|^[\u3040-\u309f]|^[\u30a0-\u30ff]|^[\uff66-\uff9f]|^[\u4e00-\u9faf]/;
		// Included Hiragana, Katakana, CJK Unified Ideographs and Halfwidth and Fullwidth Forms Blocks 
		// Hiragana -&gt; Japanese words, Katakana -&gt; foreign words
		// CJK Unified Ideographs -&gt; modern Chinese, Japanese, Korean and Vietnamese characters 
		
		var initials = name.split(" ").map(function(word) {
			return word.toUpperCase();
		}).filter(function(word) {
			return word.match(initialMatchRegex);
		}).map(function(word) {
			return word.substring(0,1);
		}).join("");
		return (initials.length &gt; 3) ? initials.substr(0, 3) : initials;
	}
	function canShowPrice(itemJS, price) {
		return gs.getProperty('glide.sc.item.cannot_show_price', '').split(',').indexOf(itemJS.getRecordClass()) == -1 &amp;&amp; 
			itemJS.read({'omit_price':''}).omit_price != 'true' &amp;&amp;
			typeof $sp.showPrice == 'function' ? $sp.showPrice(price) : fallbackShowPrice(price);
	}
	
	function fallbackShowPrice(price) {
		if (isNaN(price))
			return false;
		
		var showPriceProp = gs.getProperty('glide.sc.price.display', 'always');
		return (showPriceProp == 'non_zero' &amp;&amp; parseFloat(price) &lt;= 0)|| showPriceProp == 'never' ? false : true;
	}
})()
]]&gt;&lt;/script&gt;&lt;servicenow&gt;true&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-11-26 11:56:56&lt;/sys_created_on&gt;&lt;sys_id&gt;8face42a131d0810da297ad66144b0e2&lt;/sys_id&gt;&lt;sys_mod_count&gt;217&lt;/sys_mod_count&gt;&lt;sys_name&gt;Standard Ticket Header&lt;/sys_name&gt;&lt;sys_package display_value="Service Portal - Standard Ticket" source="sn_std_tkt"&gt;c9f1df5787f50010e0ef0cf888cb0b2c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Service Portal - Standard Ticket"&gt;c9f1df5787f50010e0ef0cf888cb0b2c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_8face42a131d0810da297ad66144b0e2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-06-08 22:10:12&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div ng-if ="data.canRead &amp;&amp; data.headless &amp;&amp; data.urLink" class="alert alert-info" ng-class="{'none': c.hide}"&gt;
  &lt;span class="notification-icon icon-info"&gt;&lt;span class="sr-only"&gt;Info Message&lt;/span&gt;&lt;/span&gt;
  ${Some of these comments were hidden during ticket routing to protect your privacy. Refer to the originating ticket for current status and updates - }
  &lt;a href={{data.urLink}} class="alert-link alert-text"&gt;{{data.number.display_value}}&lt;/a&gt;
  &lt;button type="button" class="close btn-icon icon-cross" aria-label="Close" ng-click="hideMessage()"&gt;&lt;/button&gt;
&lt;/div&gt;
&lt;div ng-if="data.canRead &amp;&amp; !data.hideHeader"&gt;
  &lt;div ng-if="data.primary_ticket_link" class="alert alert-warning"&gt;
    &lt;span class="notification-icon icon-alert"&gt;&lt;span class="sr-only"&gt;Info Message&lt;/span&gt;&lt;/span&gt;
    ${The information shown below may have additional updates. To view the latest record, &lt;a href={{data.primary_ticket_link}} class="alert-link alert-text"&gt;click here&lt;/a&gt;}
  &lt;/div&gt;
  &lt;div class="panel-body no-padder"&gt;

    &lt;div ng-if="!data.isEmpty" class= "form-group pull-left m-n"&gt;
      &lt;span class="label-color m-n text-xs"&gt;{{data.number.label}}&lt;/span&gt;
      &lt;div class="form-control no-padder no-border no-bg" id="data.number.name"&gt;{{data.number.display_value}}&lt;/div&gt;
    &lt;/div&gt;

    
    &lt;div ng-if="data.headerFields.length &gt; 0" class="pull-right"&gt;
      &lt;div class= "form-group inline m-n" 
           ng-if="field.value &amp;&amp; (field.type != 'decimal' || field.type == 'decimal' &amp;&amp; field.value != 0)" 
           ng-repeat="field in data.headerFields"
           ng-class="{'padder-md-r': !$last}"&gt;
        &lt;span class="label-color m-n text-xs"&gt;{{field.label}}&lt;/span&gt;
        &lt;div ng-switch="field.type"&gt;
          &lt;div ng-switch-when="glide_date_time" title="{{field.display_value}}" class="form-control no-padder no-border no-bg"&gt;
            &lt;sn-time-ago timestamp="field.value"&gt;&lt;/sn-time-ago&gt;
          &lt;/div&gt;
          &lt;div ng-switch-default ng-class="{'font-bold': field.name == 'state'}" class="form-control no-padder no-border no-bg"&gt;{{field.display_value}}&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;div class="panel b"&gt;

    &lt;div class="panel-heading bg-primary panel-la-jolla-default clearfix"&gt;
      &lt;div class="flex-display title-padding"&gt;
        &lt;h2 class="inline m-n m-r-sm" style="word-break: break-word;" tabindex="-1" id="short-desc"&gt;{{data.title}}&lt;/h2&gt;
      	&lt;div ng-if="!data.primary_ticket_link &amp;&amp; c.data.currentActionWidget" class="inline pull-right" style="margin-left: auto;"&gt;
        	&lt;sp-widget widget="c.data.currentActionWidget" page="{table:data.table, sys_id: data.sys_id}"&gt;&lt;/sp-widget&gt;
      	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;div ng-if="c.data.description" ng-init="c.description_toggle = false"&gt;
        &lt;div ng-if="c.description_toggle" id="description-toggle" aria-hidden="{{!c.description_toggle}}"&gt;
          &lt;h4 class="title-padding break-word" ng-bind-html="description" ng-if="c.data.description.type=='html'"&gt;&lt;/h4&gt;
          &lt;h4 class="title-padding break-word pre-wrap" ng-if="c.data.description.type!='html'"&gt;{{description}}&lt;/h4&gt;
        &lt;/div&gt;
        &lt;button class="options-btn btn pull-left" id="wrapper" ng-click="c.description_toggle = !c.description_toggle" aria-expanded="{{c.description_toggle}}" aria-controls="description-toggle"&gt;
          &lt;div ng-show="!c.description_toggle"&gt;${Show more}&lt;/div&gt;
          &lt;div ng-show="c.description_toggle"&gt;${Show less}&lt;/div&gt;
          &lt;span style="font-size: 10px; padding-left:10px" class="glyphicon" ng-class="c.description_toggle ? 'glyphicon-chevron-up' : 'glyphicon-chevron-down'"&gt;&lt;/span&gt;
        &lt;/button&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;div ng-if="!data.show_info_widget &amp;&amp; data.fields.length &gt; 0"&gt;
      &lt;div class="panel-body"&gt;
        &lt;div class="ticket-fields text-whitespace" ng-class="{'show-less': c.showMore}" ng-if="data.fields.length &gt; 0" id="std-tkt-fields"&gt;
          &lt;div class= "col-md-2 col-sm-3 col-xs-12 break-word adjust-height"
               ng-if="(field.type != 'decimal' || field.type == 'decimal' &amp;&amp; field.value != 0)" 
               ng-repeat="field in data.fields| filter: {type:'!workflow'}"&gt;
            &lt;div ng-switch="field.type"&gt;
              &lt;div ng-switch-when="glide_date_time" title="{{field.display_value}}"&gt;
                &lt;p class="label-color size text-xs header-text"&gt;{{field.label}}&lt;/p&gt;
                &lt;span class="padding-sm" ng-if="field.name == 'due_date' || field.name == 'estimated_delivery'" data-toggle="tooltip" title="{{field.display_value}}"&gt;{{field.display_value}}&lt;/span&gt;
                &lt;span ng-if="field.name != 'due_date' &amp;&amp; field.name != 'estimated_delivery'"&gt;&lt;sn-time-ago class="padding-sm" timestamp="field.value"/&gt;&lt;/span&gt;
              &lt;/div&gt;
              &lt;div ng-switch-when="glide_list"&gt;
                &lt;p class="label-color size header-text text-xs"&gt;{{field.label}}&lt;/p&gt;
                &lt;span ng-if="field.reference == 'sys_user' &amp;&amp; field.value" ng-repeat="user in field.user" data-toggle="tooltip" title="{{user.name}}"&gt;
                  &lt;sn-avatar tabindex="0" ng-click="openProfile(user.userID)" primary="user" enable-tooltip="false" enable-context-menu="true" show-presence="true" ng-style="{'cursor':data.isExternalUser?'default':'pointer'}" role="link"&gt;&lt;/sn-avatar&gt;
                &lt;/span&gt;
                &lt;span ng-if="field.reference != 'sys_user' &amp;&amp; field.value"&gt;
                  &lt;span  ng-repeat="item in field.display_value"  class="header-text"&gt;
	                  &lt;span data-toggle="tooltip" title="{{item}}"&gt;{{item}}&lt;/span&gt;
  	                &lt;span ng-if="!$last"&gt;,&lt;/span&gt;
                  &lt;/span&gt;
                &lt;/span&gt;
              &lt;/div&gt;
              &lt;div ng-switch-default ng-if="field.type != 'glide_list'"&gt;
                &lt;span ng-if="field.reference == 'sys_user' &amp;&amp; field.value" class="pull-left" data-toggle="tooltip" title="{{field.user.name}}"&gt;
                  &lt;sn-avatar tabindex="0" ng-click="openProfile(field.user.userID)" primary=field.user enable-tooltip="false" enable-context-menu="true" show-presence="true" ng-style="{'cursor':data.isExternalUser?'default':'pointer'}" role="link"&gt;&lt;/sn-avatar&gt;
                &lt;/span&gt;
                &lt;p class="label-color size header-text text-xs"&gt;{{field.label}}&lt;/p&gt;
                &lt;span ng-if="field.reference != 'sys_user' &amp;&amp; field.value" class="header-text"&gt;&lt;span data-toggle="tooltip" title="{{field.display_value}}"&gt;{{field.display_value}}&lt;/span&gt;&lt;/span&gt;
                &lt;a ng-if="field.reference == 'sys_user' &amp;&amp; field.value" href="javascript:void(0);" aria-label="{{field.label}} {{field.display_value}}" ng-click="openProfile(field.user.userID)"  class="header-text align-tooltip" ng-style="{'cursor':data.isExternalUser?'default':'pointer'}"&gt;&lt;span data-toggle="tooltip" title="{{field.display_value}}"&gt;{{field.display_value}}&lt;/span&gt;&lt;/a&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;button class="options-btn btn show-more-controls visible-xs adjust-height" ng-click="c.showMore = !c.showMore" aria-expanded="{{!c.showMore}}" aria-controls="std-tkt-fields" ng-if="c.showControls"&gt;
        &lt;span&gt;{{c.showMore? '${Show more}' : '${Show less}' }}&lt;/span&gt;
        &lt;span style="font-size: 10px; padding-left:5px; padding-right:5px" class="glyphicon" ng-class="!c.showMore ? 'glyphicon-chevron-up' : 'glyphicon-chevron-down'"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div ng-repeat="field in data.fields|filter: {type:'workflow'}"&gt;
        &lt;div class="panel-body padder-t-none"&gt;
          &lt;p class="label-color size header-text text-xs"&gt;{{field.label}}&lt;/p&gt;
          &lt;div class="padding-sm"&gt;
          &lt;sp-widget widget="field.stageWidget"&gt;&lt;/sp-widget&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div ng-if="data.show_info_widget"&gt;
      &lt;hr&gt;
      &lt;div class="panel-body"&gt;
        &lt;sp-widget widget= "c.data.info_widget" page="{table:data.table, sys_id: data.sys_id}"&gt;&lt;/sp-widget&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div ng-if="!data.canRead || !data.canReadConfig" class="panel"&gt;
  &lt;h3&gt;
    ${Sorry, either the data doesn't exist or you don't have access}
  &lt;/h3&gt;
&lt;/div&gt;

]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;</payload>
        <sys_class_name>sp_rel_widget_clone</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-28 21:11:18</sys_created_on>
        <sys_id>4c361feb972021106882b0efe153af26</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>c0361feb972021106882b0efe153af22</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sp_rel_widget_clone_4c361feb972021106882b0efe153af26</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-28 21:11:18</sys_updated_on>
    </sp_rel_widget_clone>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</application>
        <file_path/>
        <instance_id>32f05917db7d609052dd2f17d4961924</instance_id>
        <instance_name>dev105920</instance_name>
        <name>sp_rel_widget_clone_4c361feb972021106882b0efe153af26</name>
        <payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_rel_widget_clone"><sp_rel_widget_clone action="INSERT_OR_UPDATE"><child display_value="Copy of Standard Ticket Header">c0361feb972021106882b0efe153af22</child><cloned>2023-01-28 21:11:18</cloned><last_validated>2023-01-28 21:11:18</last_validated><parent display_value="Standard Ticket Header">8face42a131d0810da297ad66144b0e2</parent><payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sp_widget&gt;&lt;category&gt;sc&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function ($scope, spUtil, $window, $sce, $timeout, spAriaUtil) {
	function isRefreshNeededForChanges(changes) {
		var isNeeded = changes.length &gt; 0 &amp;&amp; !(
			changes.length == 1 &amp;&amp; (
				changes[0] == 'comments' || changes[0] == 'work_notes' || changes[0] == 'task_percent_complete'
			)
		);
		return isNeeded;
	}
	var c = this;
	if (c.data.is_new_order) {
		$timeout(function() {
			spAriaUtil.sendLiveMessage(c.data.requestSubmitMsg);
		}, 500);
		
	}
	c.showMore = c.showControls = false;
	fieldsCount = 0; // actual fields that will be rendered
	angular.forEach(c.data.fields, function(field) {
		if (field.type !== 'workflow' &amp;&amp; (field.type !== 'decimal' || field.value != 0))
				fieldsCount++;
	});
	if (fieldsCount &gt; 3)
		c.showMore = c.showControls = true;
	c.data.currentActionWidget = $scope.data.actionWidget;
	spUtil.recordWatch($scope, $scope.data.table, "sys_id=" + $scope.data.sys_id, function(name) {
		if (isRefreshNeededForChanges(name.data.changes)) {
			c.data.currentActionWidget = null;
			$scope.server.get().then(function(response) {
				if (!_.isEqual(c.data, response.data))
					_.assign(c.data, response.data);
				c.data.currentActionWidget = response.data.actionWidget;
				if (c.data.isFocusRequired)
					c.data.currentActionWidget.isFocusRequired = c.data.isFocusRequired;
			});
		} else {
			c.server.get().then(function(response) {
						c.data.headerFields = response.data.headerFields;
					});
		}
	});
	$scope.$on('focusOnActions', function(evt, data) {
		 c.data.isFocusRequired = data.isFocusRequired;
		});
	
	$scope.hideMessage = function($scope) {
		c.hide = true;
	}
	$scope.openProfile = function(profileId) {
		if(!$scope.data.isExternalUser) {
		$window.open('?id=user_profile&amp;sys_id=' + profileId, '_blank');
		}
	};
	if ($scope.data.description)
		$scope.description = $scope.data.description.type == 'html' ? $sce.trustAsHtml($scope.data.description.display_value) : $scope.data.description.display_value;
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;$sp-space--sm: 8px !default;
$sp-space--xxs: 2px !default;
.options-btn {
    border:none;
    background-image:none;
    background-color:transparent;
    -webkit-box-shadow: none;
    -moz-box-shadow: none;
    box-shadow: none;
  	color: $brand-primary;
  	padding: 0px !important;
	padding-top: 10px !important;
}

.options-btn:focus {
  outline-offset: 0px;
}

.pre-wrap {
  white-space: pre-wrap;
}

.flex-display {
  display: flex;
  align-items: center;
}

.title-padding {
  padding-top: 5px;
  padding-bottom: 5px;
}

.ticket-fields {
  margin-left: -7px;
  margin-right: -($sp-space--sm);
  -webkit-margin-before: 0;
  -webkit-margin-after: 0;
 
}

.adjust-height {
  min-height: 45px;
  margin-bottom: 1%;
}

.grid{
  grid:auto / auto auto;
  display:grid;
}

.centre{
  margin-bottom: auto;
  margin-top: auto;
}

#wrapper {

  display: flex;
  align-items: center;
  margin: auto;
}

.size{
  margin: 0px !important;
}

hr{
	margin: 0px !important;
}

.padder-md-r {
  padding-right: 20px !important;
}

.padding-sm {
  padding-left: 10px;
}

.avatar-container {
  margin-top: $sp-space--xxs;
  margin-right: $sp-space--xxs;
}

.header-text {
  padding-left: 10px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: block;
  margin-bottom: 0px;
}

.label-color {
  color: $gray;
}

.alert-text {
  font-weight: normal !important;
  text-decoration: underline;
}

.notification-icon {
  margin-right: $sp-space--xxs;
}

.header-text &amp;gt; .tooltip {
  left: 10px !important;
}
.align-tooltip &amp;gt; .tooltip {
  left: 50px !important;
}
@media only screen and (max-width : 767px) {
  .show-less &amp;gt; div:nth-child(n+4) {
    display : none !important;
  }
  
  .text-whitespace div &amp;gt; span {	
    white-space: normal !important;
  }
  
 .text-whitespace div &amp;gt; p {	
    white-space: normal !important;
  }
  .show-more-controls {
   padding: 0 !important;
   margin-left: 1.5rem !important;
  }
  	
 .show-more-controls &amp;gt; span {	
   padding-left: 1rem !important;
 }
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description&gt;Provides the header section for any standard ticket&lt;/description&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;standard_ticket_header&lt;/id&gt;&lt;internal&gt;true&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;Standard Ticket Header&lt;/name&gt;&lt;option_schema&gt;[{"name":"pickup_msg","section":"Presentation","label":"Pickup message","type":"string"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_external,snc_internal&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function(){
	var tableName = $sp.getParameter('table');
	
	var sysId = $sp.getParameter('sys_id');
	var record = sn_std_tkt_api.TicketConfig.getTicketRecord(tableName, sysId);
	data.isExternalUser = !gs.hasRole('snc_internal');
	data.is_new_order = (($sp.getParameter("is_new_order") + '') === "true");
	
	data.canRead = hasReadAcces(record);
	if (!data.canRead)
		return;
	
	if ($sp.getParameter('headless') == 'true')
		data.headless = true;
	else if ($sp.getParameter('headless') == 'false')
		data.headless = false;
	else if ($sp.getParameter('headless') == null)
		data.headless = false;
	else
		return;

	if (data.headless)
		data.hideHeader = true;

	tableName = record.getTableName();
	sysId = record.getUniqueValue();
	
	var sdField;
	var headerFields = [];
	var showDomainState = false;
	
	//URL has domain table
	if (tableName != 'universal_request') {
		//Check if universal_request field is present and it is a universal request
		if (record.isValidField('universal_request') &amp;&amp; !record.universal_request.nil()) {
			data.urLink = '?id=standard_ticket&amp;table=universal_request&amp;sys_id=' + record.universal_request.sys_id;
			var ur = sn_std_tkt_api.TicketConfig.getTicketRecord('universal_request', record.universal_request);
			if (!hasReadAcces(ur)) {
				readHeaderFields(record);
				showDomainState = true;
			}
			else {
				data.number = $sp.getField(ur, 'number');
				headerFields.push($sp.getField(ur, 'sys_created_on'));
				headerFields.push($sp.getField(record, 'sys_updated_on'));
				headerFields.push($sp.getField(ur, 'state'));
				sdField = $sp.getField(ur, 'short_description');
			}
			//URL-non primary ticket
			if (record.universal_request.primary_task != record.sys_id)
						data.primary_ticket_link = '?id=standard_ticket&amp;table=universal_request&amp;sys_id=' + record.universal_request;
		}
		//It is a domain ticket
		else {
			readHeaderFields(record);
			showDomainState = true;
		}
 }
  //URL-Table name is universal request
	else {
		//Domain ticket is created
		if (!record.primary_task.nil()) {
			data.urLink = '?id=standard_ticket&amp;table=universal_request&amp;sys_id=' + record.sys_id;
			var primary_table = record.primary_task.getRefRecord().getTableName();
			var primaryGR = sn_std_tkt_api.TicketConfig.getTicketRecord(primary_table, record.primary_task + '');
			data.canReadPrimary = hasReadAcces(primaryGR);
			if (!data.canReadPrimary) {
				readHeaderFields(record);
				record = sn_std_tkt_api.TicketConfig.getTicketRecord(primary_table, record.primary_task);
			}
			else { //can read primary ticket
				sdField = $sp.getField(record, 'short_description');
				data.number = $sp.getField(record, 'number');
				headerFields.push($sp.getField(record, 'sys_created_on'));
				headerFields.push($sp.getField(primaryGR, 'sys_updated_on'));
				headerFields.push($sp.getField(record, 'state'));

				record = sn_std_tkt_api.TicketConfig.getTicketRecord(primary_table, record.primary_task);
				tableName = record.getTableName();
				sysId = record.getUniqueValue();
			}
		}
		//No domain ticket assigned
		else
			readHeaderFields(record);
	}
	
	if (sdField == null || !sdField.value) {//Use number if SD is not there
		data.isEmpty = true;
		sdField = data.number;
	}

	data.title = sdField ? sdField.display_value : record.getLabel();
	data.headerFields = headerFields;
	data.requestSubmitMsg = gs.getMessage("Thank You. Your request {0} has been submitted." , data.number ? data.number.display_value : "");
	
	data.canReadConfig = hasReadAcces(record);
	if (!data.canReadConfig)
		return;

	var config = sn_std_tkt_api.TicketConfig.getConfig(tableName, record.sys_domain);

	if (config) {
		if (showDomainState &amp;&amp; config.state_field != 'state') {
			var configState = $sp.getField(record, config.state_field);
			headerFields.forEach(function(field, index, that) {
				if (field.name == 'state') {
					that[index] = configState;
				}
			})
		}
		data.show_info_widget = config.show_info_widget;
		if (!data.show_info_widget)
			showConfigTicketFields (config, record);
		else
			showTicketWidget(config, tableName, sysId);

		data.table = tableName;
		data.sys_id = sysId;

		showActionWidget(config, tableName, sysId);
		var descriptionField = config.description_field || 'description';
		if (record.isValidField(descriptionField)) {
			var field = record.getElement(descriptionField);
			if (field &amp;&amp; field.canRead())
				showDescription(config, record, descriptionField);
		}
	}
	
	function hasReadAcces(record) {
		return (record != null &amp;&amp; record.isValid() &amp;&amp; record.canRead());
	}
	
	function readHeaderFields(record) {
		sdField = $sp.getField(record, 'short_description');
		data.number = $sp.getField(record, 'number');
		headerFields = $sp.getFields(record, 'sys_created_on, sys_updated_on, state');
	}
	
	function showConfigTicketFields(config, record) {
		var fieldNames = [];
			if (config.info_fields)
				fieldNames = config.info_fields.split(',');
		var fields = [];
		if (record.getTableName() == 'sc_req_item' &amp;&amp; !record.cat_item.nil()) {
			var catalogItemJS = new sn_sc.CatItem(record.cat_item);
			var cartItemDetail = catalogItemJS.getItemSummary(true);
		}
			fieldNames.forEach(function (fName) {
				if ((!fName || fName == ''))
					return;
				
				var fElement = record.getElement(fName);
				if (!fElement)
					return;

				if (!fElement.canRead())
					return;
				
				if(fName == 'recurring_price' &amp;&amp; record.recurring_frequency.nil())
					return;
				
				if (fName == 'price' || fName == 'recurring_price') {
					var showPrice = canShowPrice(catalogItemJS, record.getValue(fName));
					if (!showPrice)
						return;
				}
				var hideQuantity = (fName == 'quantity') &amp;&amp; !cartItemDetail.show_quantity;
				if (hideQuantity)
					return;
				
				var type = fElement.getED().getInternalType();
				if (type == 'glide_list')
					loadGlideListFieldInfo(fElement, fName, type, record, fields);
				else if (type == 'workflow')
					loadWorkflowFieldInfo(fElement, fName, type, record, fields);
				else {
					var f = {
						display_value: (fName == 'recurring_price' &amp;&amp; !record.recurring_frequency.nil()) ? (fElement.getDisplayValue() + " " + record.getDisplayValue('recurring_frequency')) : fElement.getDisplayValue(),
						label: fElement.getLabel(),
						name: fElement.getName(),
						type: type,
						value: (fName == 'sys_updated_on' &amp;&amp; record.getValue("sys_mod_count") &lt;= 0) ? '' : fElement.toString()
					};
					
					if (!f.value)
						return;

					if (type == 'reference') {
						var reference = fElement.getReferenceTable();
						f.reference = reference;

						if (reference == 'sys_user') {
							f.user = {
								userID: f.value,
								name: f.display_value,
								avatar: GlideAvatarFinder.getAvatarPath(f.value),
								initials: buildInitials(f.display_value)
							}
						}
					}
					fields.push(f);
				}
			});

			data.fields = fields;
	}
	
	function loadGlideListFieldInfo(fElement, fName, type, record, fields) {
		var val = fElement.toString();
		var f = {
			display_value: fElement.getDisplayValue() ? fElement.getDisplayValue().split(",") : '',
			label: fElement.getLabel(),
			type: type,
			value: val ? val.split(",") : '',
			reference: fElement.getED().getReference()
		};
		if (!f.value)
			return;

		var gReference = fElement.getED().getReference();
		if (gReference == 'sys_user') {
			f.user = [];
			for(var u = 0; u &lt; f.value.length; u++){
				f.user.push(person = {
					userID: f.value[u],
					name: f.display_value[u],
					avatar: GlideAvatarFinder.getAvatarPath(f.value[u]),
					initials: buildInitials(f.display_value[u])
				})
			}
		}
		fields.push(f);
	}
	
	function loadWorkflowFieldInfo(fElement, fName, type, record, fields) {
		var f = {
			display_value: fElement.getDisplayValue(),
			label: fElement.getLabel(),
			type: type,
			value: fElement.toString()
		};
		f.stageWidget = $sp.getWidget('request_item_workflow_stages', {req_item_id: sysId});
		fields.push(f);
	}
	
	function showTicketWidget(config, tableName, sysId) {
		var widgetParam = config.info_widget_param
			if (widgetParam)
				widgetParam = JSON.parse(widgetParam)
			else
				widgetParam = {};
		
			widgetParam.table = tableName;
			widgetParam.sys_id = sysId;
			
			data.info_widget = $sp.getWidget(config.info_widget, widgetParam);
	}
	
	function showActionWidget(config, tableName, sysId) {
		var widgetParam = config.action_widget_param
		if (widgetParam)
			widgetParam = JSON.parse(widgetParam)
		else
			widgetParam = {};

		widgetParam.table = tableName;
		widgetParam.sys_id = sysId;

		data.actionWidget = $sp.getWidget(config.action_widget, widgetParam);
	}

	function setDescription(record, descriptionField) {
		var description = $sp.getField(record, descriptionField);
		if (description) {
			data.description = {
				'type' : description.type,
				'display_value' : description.display_value
			};
		}
	}

	function showDescription(config, record, descriptionField) {
		if (config.show_description == 'always')
			setDescription(record, descriptionField);

		else if (config.show_description == 'no_variable') {
			var variables = record.variables.getElements(true);
			if (variables.length == 0)
				setDescription(record, descriptionField);

		}
	}
	
	function buildInitials(name) {
		if (!name)
			return "--";

		var initialMatchRegex = /^[A-ZÀ-Ÿ]|^[\u3040-\u309f]|^[\u30a0-\u30ff]|^[\uff66-\uff9f]|^[\u4e00-\u9faf]/;
		// Included Hiragana, Katakana, CJK Unified Ideographs and Halfwidth and Fullwidth Forms Blocks 
		// Hiragana -&gt; Japanese words, Katakana -&gt; foreign words
		// CJK Unified Ideographs -&gt; modern Chinese, Japanese, Korean and Vietnamese characters 
		
		var initials = name.split(" ").map(function(word) {
			return word.toUpperCase();
		}).filter(function(word) {
			return word.match(initialMatchRegex);
		}).map(function(word) {
			return word.substring(0,1);
		}).join("");
		return (initials.length &gt; 3) ? initials.substr(0, 3) : initials;
	}
	function canShowPrice(itemJS, price) {
		return gs.getProperty('glide.sc.item.cannot_show_price', '').split(',').indexOf(itemJS.getRecordClass()) == -1 &amp;&amp; 
			itemJS.read({'omit_price':''}).omit_price != 'true' &amp;&amp;
			typeof $sp.showPrice == 'function' ? $sp.showPrice(price) : fallbackShowPrice(price);
	}
	
	function fallbackShowPrice(price) {
		if (isNaN(price))
			return false;
		
		var showPriceProp = gs.getProperty('glide.sc.price.display', 'always');
		return (showPriceProp == 'non_zero' &amp;&amp; parseFloat(price) &lt;= 0)|| showPriceProp == 'never' ? false : true;
	}
})()
]]&gt;&lt;/script&gt;&lt;servicenow&gt;true&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-11-26 11:56:56&lt;/sys_created_on&gt;&lt;sys_id&gt;8face42a131d0810da297ad66144b0e2&lt;/sys_id&gt;&lt;sys_mod_count&gt;217&lt;/sys_mod_count&gt;&lt;sys_name&gt;Standard Ticket Header&lt;/sys_name&gt;&lt;sys_package display_value="Service Portal - Standard Ticket" source="sn_std_tkt"&gt;c9f1df5787f50010e0ef0cf888cb0b2c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Service Portal - Standard Ticket"&gt;c9f1df5787f50010e0ef0cf888cb0b2c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_8face42a131d0810da297ad66144b0e2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-06-08 22:10:12&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div ng-if ="data.canRead &amp;&amp; data.headless &amp;&amp; data.urLink" class="alert alert-info" ng-class="{'none': c.hide}"&gt;
  &lt;span class="notification-icon icon-info"&gt;&lt;span class="sr-only"&gt;Info Message&lt;/span&gt;&lt;/span&gt;
  ${Some of these comments were hidden during ticket routing to protect your privacy. Refer to the originating ticket for current status and updates - }
  &lt;a href={{data.urLink}} class="alert-link alert-text"&gt;{{data.number.display_value}}&lt;/a&gt;
  &lt;button type="button" class="close btn-icon icon-cross" aria-label="Close" ng-click="hideMessage()"&gt;&lt;/button&gt;
&lt;/div&gt;
&lt;div ng-if="data.canRead &amp;&amp; !data.hideHeader"&gt;
  &lt;div ng-if="data.primary_ticket_link" class="alert alert-warning"&gt;
    &lt;span class="notification-icon icon-alert"&gt;&lt;span class="sr-only"&gt;Info Message&lt;/span&gt;&lt;/span&gt;
    ${The information shown below may have additional updates. To view the latest record, &lt;a href={{data.primary_ticket_link}} class="alert-link alert-text"&gt;click here&lt;/a&gt;}
  &lt;/div&gt;
  &lt;div class="panel-body no-padder"&gt;

    &lt;div ng-if="!data.isEmpty" class= "form-group pull-left m-n"&gt;
      &lt;span class="label-color m-n text-xs"&gt;{{data.number.label}}&lt;/span&gt;
      &lt;div class="form-control no-padder no-border no-bg" id="data.number.name"&gt;{{data.number.display_value}}&lt;/div&gt;
    &lt;/div&gt;

    
    &lt;div ng-if="data.headerFields.length &gt; 0" class="pull-right"&gt;
      &lt;div class= "form-group inline m-n" 
           ng-if="field.value &amp;&amp; (field.type != 'decimal' || field.type == 'decimal' &amp;&amp; field.value != 0)" 
           ng-repeat="field in data.headerFields"
           ng-class="{'padder-md-r': !$last}"&gt;
        &lt;span class="label-color m-n text-xs"&gt;{{field.label}}&lt;/span&gt;
        &lt;div ng-switch="field.type"&gt;
          &lt;div ng-switch-when="glide_date_time" title="{{field.display_value}}" class="form-control no-padder no-border no-bg"&gt;
            &lt;sn-time-ago timestamp="field.value"&gt;&lt;/sn-time-ago&gt;
          &lt;/div&gt;
          &lt;div ng-switch-default ng-class="{'font-bold': field.name == 'state'}" class="form-control no-padder no-border no-bg"&gt;{{field.display_value}}&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;div class="panel b"&gt;

    &lt;div class="panel-heading bg-primary panel-la-jolla-default clearfix"&gt;
      &lt;div class="flex-display title-padding"&gt;
        &lt;h2 class="inline m-n m-r-sm" style="word-break: break-word;" tabindex="-1" id="short-desc"&gt;{{data.title}}&lt;/h2&gt;
      	&lt;div ng-if="!data.primary_ticket_link &amp;&amp; c.data.currentActionWidget" class="inline pull-right" style="margin-left: auto;"&gt;
        	&lt;sp-widget widget="c.data.currentActionWidget" page="{table:data.table, sys_id: data.sys_id}"&gt;&lt;/sp-widget&gt;
      	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;div ng-if="c.data.description" ng-init="c.description_toggle = false"&gt;
        &lt;div ng-if="c.description_toggle" id="description-toggle" aria-hidden="{{!c.description_toggle}}"&gt;
          &lt;h4 class="title-padding break-word" ng-bind-html="description" ng-if="c.data.description.type=='html'"&gt;&lt;/h4&gt;
          &lt;h4 class="title-padding break-word pre-wrap" ng-if="c.data.description.type!='html'"&gt;{{description}}&lt;/h4&gt;
        &lt;/div&gt;
        &lt;button class="options-btn btn pull-left" id="wrapper" ng-click="c.description_toggle = !c.description_toggle" aria-expanded="{{c.description_toggle}}" aria-controls="description-toggle"&gt;
          &lt;div ng-show="!c.description_toggle"&gt;${Show more}&lt;/div&gt;
          &lt;div ng-show="c.description_toggle"&gt;${Show less}&lt;/div&gt;
          &lt;span style="font-size: 10px; padding-left:10px" class="glyphicon" ng-class="c.description_toggle ? 'glyphicon-chevron-up' : 'glyphicon-chevron-down'"&gt;&lt;/span&gt;
        &lt;/button&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;div ng-if="!data.show_info_widget &amp;&amp; data.fields.length &gt; 0"&gt;
      &lt;div class="panel-body"&gt;
        &lt;div class="ticket-fields text-whitespace" ng-class="{'show-less': c.showMore}" ng-if="data.fields.length &gt; 0" id="std-tkt-fields"&gt;
          &lt;div class= "col-md-2 col-sm-3 col-xs-12 break-word adjust-height"
               ng-if="(field.type != 'decimal' || field.type == 'decimal' &amp;&amp; field.value != 0)" 
               ng-repeat="field in data.fields| filter: {type:'!workflow'}"&gt;
            &lt;div ng-switch="field.type"&gt;
              &lt;div ng-switch-when="glide_date_time" title="{{field.display_value}}"&gt;
                &lt;p class="label-color size text-xs header-text"&gt;{{field.label}}&lt;/p&gt;
                &lt;span class="padding-sm" ng-if="field.name == 'due_date' || field.name == 'estimated_delivery'" data-toggle="tooltip" title="{{field.display_value}}"&gt;{{field.display_value}}&lt;/span&gt;
                &lt;span ng-if="field.name != 'due_date' &amp;&amp; field.name != 'estimated_delivery'"&gt;&lt;sn-time-ago class="padding-sm" timestamp="field.value"/&gt;&lt;/span&gt;
              &lt;/div&gt;
              &lt;div ng-switch-when="glide_list"&gt;
                &lt;p class="label-color size header-text text-xs"&gt;{{field.label}}&lt;/p&gt;
                &lt;span ng-if="field.reference == 'sys_user' &amp;&amp; field.value" ng-repeat="user in field.user" data-toggle="tooltip" title="{{user.name}}"&gt;
                  &lt;sn-avatar tabindex="0" ng-click="openProfile(user.userID)" primary="user" enable-tooltip="false" enable-context-menu="true" show-presence="true" ng-style="{'cursor':data.isExternalUser?'default':'pointer'}" role="link"&gt;&lt;/sn-avatar&gt;
                &lt;/span&gt;
                &lt;span ng-if="field.reference != 'sys_user' &amp;&amp; field.value"&gt;
                  &lt;span  ng-repeat="item in field.display_value"  class="header-text"&gt;
	                  &lt;span data-toggle="tooltip" title="{{item}}"&gt;{{item}}&lt;/span&gt;
  	                &lt;span ng-if="!$last"&gt;,&lt;/span&gt;
                  &lt;/span&gt;
                &lt;/span&gt;
              &lt;/div&gt;
              &lt;div ng-switch-default ng-if="field.type != 'glide_list'"&gt;
                &lt;span ng-if="field.reference == 'sys_user' &amp;&amp; field.value" class="pull-left" data-toggle="tooltip" title="{{field.user.name}}"&gt;
                  &lt;sn-avatar tabindex="0" ng-click="openProfile(field.user.userID)" primary=field.user enable-tooltip="false" enable-context-menu="true" show-presence="true" ng-style="{'cursor':data.isExternalUser?'default':'pointer'}" role="link"&gt;&lt;/sn-avatar&gt;
                &lt;/span&gt;
                &lt;p class="label-color size header-text text-xs"&gt;{{field.label}}&lt;/p&gt;
                &lt;span ng-if="field.reference != 'sys_user' &amp;&amp; field.value" class="header-text"&gt;&lt;span data-toggle="tooltip" title="{{field.display_value}}"&gt;{{field.display_value}}&lt;/span&gt;&lt;/span&gt;
                &lt;a ng-if="field.reference == 'sys_user' &amp;&amp; field.value" href="javascript:void(0);" aria-label="{{field.label}} {{field.display_value}}" ng-click="openProfile(field.user.userID)"  class="header-text align-tooltip" ng-style="{'cursor':data.isExternalUser?'default':'pointer'}"&gt;&lt;span data-toggle="tooltip" title="{{field.display_value}}"&gt;{{field.display_value}}&lt;/span&gt;&lt;/a&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;button class="options-btn btn show-more-controls visible-xs adjust-height" ng-click="c.showMore = !c.showMore" aria-expanded="{{!c.showMore}}" aria-controls="std-tkt-fields" ng-if="c.showControls"&gt;
        &lt;span&gt;{{c.showMore? '${Show more}' : '${Show less}' }}&lt;/span&gt;
        &lt;span style="font-size: 10px; padding-left:5px; padding-right:5px" class="glyphicon" ng-class="!c.showMore ? 'glyphicon-chevron-up' : 'glyphicon-chevron-down'"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div ng-repeat="field in data.fields|filter: {type:'workflow'}"&gt;
        &lt;div class="panel-body padder-t-none"&gt;
          &lt;p class="label-color size header-text text-xs"&gt;{{field.label}}&lt;/p&gt;
          &lt;div class="padding-sm"&gt;
          &lt;sp-widget widget="field.stageWidget"&gt;&lt;/sp-widget&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div ng-if="data.show_info_widget"&gt;
      &lt;hr&gt;
      &lt;div class="panel-body"&gt;
        &lt;sp-widget widget= "c.data.info_widget" page="{table:data.table, sys_id: data.sys_id}"&gt;&lt;/sp-widget&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div ng-if="!data.canRead || !data.canReadConfig" class="panel"&gt;
  &lt;h3&gt;
    ${Sorry, either the data doesn't exist or you don't have access}
  &lt;/h3&gt;
&lt;/div&gt;

]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;</payload><sys_class_name>sp_rel_widget_clone</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2023-01-28 21:11:18</sys_created_on><sys_id>4c361feb972021106882b0efe153af26</sys_id><sys_mod_count>0</sys_mod_count><sys_name>c0361feb972021106882b0efe153af22</sys_name><sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package><sys_policy/><sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope><sys_update_name>sp_rel_widget_clone_4c361feb972021106882b0efe153af26</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2023-01-28 21:11:18</sys_updated_on></sp_rel_widget_clone></record_update>]]></payload>
        <payload_hash>743170676</payload_hash>
        <record_name>c0361feb972021106882b0efe153af22</record_name>
        <reverted_from/>
        <source>70e87fb6976421106882b0efe153af14</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-28 21:11:18</sys_created_on>
        <sys_id>50361feb972021106882b0efe153af29</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>185fa38681c0000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-28 21:11:18</sys_updated_on>
        <type>Widget Clone</type>
        <update_guid>88361feb9f2021109bcde4464ae65828</update_guid>
        <update_guid_history>88361feb9f2021109bcde4464ae65828:743170676</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="">3c1917ef972021106882b0efe153af4f</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-28 21:23:54</sys_created_on>
        <sys_db_object display_value="" name="sp_rel_widget_clone">sp_rel_widget_clone</sys_db_object>
        <sys_id>202d42c29835432088444ec70fb04c29</sys_id>
        <sys_metadata>4c361feb972021106882b0efe153af26</sys_metadata>
        <sys_name>c0361feb972021106882b0efe153af22</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_scope_delete display_value="">94872a8897db403e8ee69a431de2fca4</sys_scope_delete>
        <sys_update_name>sp_rel_widget_clone_4c361feb972021106882b0efe153af26</sys_update_name>
        <sys_update_version display_value="sp_rel_widget_clone_4c361feb972021106882b0efe153af26">50361feb972021106882b0efe153af29</sys_update_version>
    </sys_metadata_delete>
</record_update>
